<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.zmyuan" annotation-config="true">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="order" value="1" />
<!-- 		<property name="webBindingInitializer"> -->
<!-- 			<bean class="com.tes.ebook.web.controller.TesWebBindingInitializer" /> -->
<!-- 		</property> -->
		<property name="messageConverters">
			<list>

				<!-- 解析json请求数据，将json转换为java对象 -->
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />

			</list>
		</property>


	</bean>

	<bean id="defaultAnnotationHandlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="0" />

	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- true，开启扩展名支持，false关闭支持 -->
		<property name="favorPathExtension" value="false" />
		<!-- 用于开启 /userinfo/123?format=json的支持 -->
		<property name="favorParameter" value="true" />
		<!-- 在没有扩展名和参数时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html;charset=UTF-8" />
		<!-- 参数值至mimeType的映射,即 /rest?format=json json是key，application/json就是value -->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=UTF-8" />
				<entry key="json" value="application/json;charset=UTF-8" />
				<entry key="xml" value="application/xml;charset=UTF-8" />
				<entry key="excel" value="application/excel;charset=UTF-8" />
				<entry key="pdf" value="application/pdf;charset=UTF-8" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<!-- 重新设置 objectMapper -->
					<property name="objectMapper">
						<bean class="org.codehaus.jackson.map.ObjectMapper">
							<!-- 设置objectMapper的serializationConfig的serializationInclusion属性，以忽略null对象 -->
							<property name="serializationConfig.serializationInclusion">
								<value
									type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value>
							</property>
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件大小的参数 -->
		<property name="maxUploadSize" value="100000000000" />
	</bean>

	<!-- 对静态资源文件的访问 -->
	<mvc:default-servlet-handler />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.zmyuan.common.web.interceptor.LoginInteceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
